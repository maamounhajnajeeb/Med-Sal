# Generated by Django 4.2.6 on 2023-10-28 13:43

from django.db import migrations, models
import django.db.models.manager
import django.utils.timezone
import users.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('image', models.ImageField(default='defaults/default_profile.jpg', upload_to=users.utils.unique_image_name)),
                ('user_type', models.CharField(choices=[('SERVICE_PROVIDER', 'Service_Provider'), ('SUPER_ADMIN', 'Super_Admin'), ('ADMIN', 'Admin'), ('USER', 'User')], default='USER', max_length=32)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('verification_code_generated_at', models.DateTimeField(blank=True, null=True)),
                ('is_verification_email_sent', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
            },
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admin',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.users',),
            managers=[
                ('admins', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SuperAdmins',
            fields=[
            ],
            options={
                'verbose_name': 'SuperAdmin',
                'verbose_name_plural': 'SuperAdmin',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.users',),
            managers=[
                ('super_admins', django.db.models.manager.Manager()),
            ],
        ),
    ]
